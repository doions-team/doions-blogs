{"version":3,"sources":["components/TagIndexPage.module.css","components/TagPage.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/TagIndexPage.js","components/TagPage.js","routes/tags.js"],"names":["module","exports","TagIndexPage","TagPage","_arrayLikeToArray","arr","len","length","i","arr2","Array","_toConsumableArray","isArray","_arrayWithoutHoles","iter","Symbol","iterator","Object","from","_iterableToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","test","_unsupportedIterableToArray","TypeError","_nonIterableSpread","props","react_default","a","createElement","className","styles","tags","map","tag","key","href","dist_es","count","_ref","blogRoot","routes","route","url","ArticleSummary","crawlRoutes","_callee4","root","_yield$crawl","paths","regenerator_default","wrap","_context4","prev","next","cache","crawl","context","crawlingRoutes","sent","resolve","method","urls","abrupt","stop","tagRoutes","compose","withContext","req","objectSpread2","tagsRoot","mountpath","withCrawlerPatterns","/:tag","_tag","asyncToGenerator","mark","_callee","_context","t0","getAvailableTagsFromRoutes","t1","_x2","_x3","apply","this","arguments","mount","/","title","getView","_getView","_callee2","_context2","fromPairs","toLowerCase","forEach","data","push","components_TagIndexPage","join","_x4","_x5","getTitle","params","_getView2","_callee3","lowerCaseTag","_context3","find","metaTag","components_TagPage","_x6","_x7","Set","concat"],"mappings":"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","file":"static/js/4.33dffb79.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TagIndexPage\":\"TagIndexPage_TagIndexPage__ND11C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TagPage\":\"TagPage_TagPage__11vZg\"};","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react'\r\nimport { Link } from 'react-navi'\r\nimport styles from './TagIndexPage.module.css'\r\n\r\nfunction TagIndexPage(props) {\r\n  return (\r\n    <div className={styles.TagIndexPage}>\r\n      <h1>Tags</h1>\r\n      <ul>\r\n        {props.tags.map(tag =>\r\n          <li key={tag.href}>\r\n            <Link href={tag.href}>{tag.name} ({tag.count})</Link>\r\n          </li>  \r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TagIndexPage","import React from 'react'\r\nimport ArticleSummary from './ArticleSummary'\r\nimport styles from './TagPage.module.css'\r\n\r\nfunction TagPage({ blogRoot, name, routes }) {\r\n  return (\r\n    <div className={styles.TagPage}>\r\n      <h1>{name} posts</h1>\r\n      <ul>\r\n        {routes.map(route =>\r\n          <li key={route.url.href}>\r\n            <ArticleSummary blogRoot={blogRoot} route={route} />\r\n          </li>  \r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TagPage","import React from 'react'\r\nimport { compose, crawl, mount, resolve, route, withContext, withCrawlerPatterns } from 'navi'\r\nimport { join } from 'path'\r\nimport { fromPairs } from 'lodash'\r\nimport TagIndexPage from '../components/TagIndexPage'\r\nimport TagPage from '../components/TagPage'\r\nimport routes from './index'\r\n\r\nasync function crawlRoutes(root) {\r\n  if (!crawlRoutes.cache[root]) {\r\n    let { paths } = await crawl({\r\n      context: {\r\n        crawlingRoutes: true,\r\n      },\r\n      root,\r\n      routes,\r\n    })\r\n    crawlRoutes.cache[root] = await resolve({\r\n      method: 'HEAD',\r\n      routes,\r\n      urls: paths,\r\n    }) \r\n  }\r\n  return crawlRoutes.cache[root]\r\n}\r\ncrawlRoutes.cache = {}\r\n\r\nconst tagRoutes = compose(\r\n  withContext((req, context) => ({\r\n    ...context,\r\n    tagsRoot: req.mountpath,\r\n  })),\r\n  withCrawlerPatterns({\r\n    '/:tag': async (req, context) => {\r\n      if (!context.crawlingRoutes) {\r\n        return getAvailableTagsFromRoutes(\r\n          await crawlRoutes(context.blogRoot)\r\n        ).map(tag => '/'+tag)\r\n      }\r\n      return []\r\n    }\r\n  }),\r\n  mount({\r\n    '/': route({\r\n      title: 'Tags',\r\n\r\n      getView: async (req, context) => {\r\n        // Build a list of pages for each tag\r\n        let routes = await crawlRoutes(context.blogRoot)\r\n        let tags = getAvailableTagsFromRoutes(routes)\r\n        let tagRoutes = fromPairs(tags.map(name => [name.toLowerCase(), []]))\r\n        routes.forEach(route => {\r\n          let data = route.data\r\n          if (data && data.tags) {\r\n            data.tags.forEach(tag => {\r\n              tag = tag.toLowerCase()\r\n              if (tagRoutes[tag]) {\r\n                tagRoutes[tag].push(route)\r\n              }\r\n            })\r\n          }\r\n        })\r\n\r\n        return (\r\n          <TagIndexPage\r\n            blogRoot={context.blogRoot}\r\n            tags={tags.map(name => ({\r\n              name,\r\n              href: join(req.mountpath, name.toLowerCase()),\r\n              count: (tagRoutes[name] || []).length,\r\n            }))}\r\n          />\r\n        )\r\n      },\r\n    }),\r\n\r\n    '/:tag': route({\r\n      getTitle: req => req.params.tag,\r\n      getView: async (req, context) => {\r\n        let lowerCaseTag = req.params.tag.toLowerCase()\r\n        let routes = await crawlRoutes(context.blogRoot)\r\n\r\n        // Build a list of pages that include the tag from the site map\r\n        let tagRoutes = []\r\n        routes.forEach(route => {\r\n          let tags = (route.data && route.data.tags) || []\r\n          if (tags.find(metaTag => metaTag.toLowerCase() === lowerCaseTag)) {\r\n            tagRoutes.push(route)\r\n          }\r\n        })\r\n\r\n        return (\r\n          <TagPage\r\n            blogRoot={context.blogRoot}\r\n            name={req.params.tag}\r\n            routes={tagRoutes}\r\n          />\r\n        )\r\n      },\r\n    }),\r\n  }),\r\n)\r\n\r\nfunction getAvailableTagsFromRoutes(routes) {\r\n  return Array.from(\r\n    new Set(\r\n      [].concat(...routes.map(route => (route.data && route.data.tags) || [])),\r\n    ),\r\n  )\r\n}\r\n\r\nexport default tagRoutes\r\n"],"sourceRoot":""}